CodeBook for run_analysis.R

The run_analysis.R script performs the data preparation and then followed by the 5 steps required as described in the course projectâ€™s definition.

## Loading dataset to R 
features <- read.table("./UCI HAR Dataset/features.txt", header = FALSE) (541 rows, 2 cols)
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt", header = FALSE) (2947rows, 1 col)
x_test <- read.table("./UCI HAR Dataset/test/X_test.txt", header = FALSE) (2947rows, 561 cols)
y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt", header = FALSE)(2947rows, 1 col)
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", header = FALSE)(7352 rows, 1 col)
y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", header = FALSE) (7352 rows, 1 col)
x_train <- read.table("./UCI HAR Dataset/train/X_train.txt", header = FALSE)(7352 rows, 561 cols)
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", header = FALSE) (6 rows, 2 cols)

## Analysis based on the 5 steps

# 1. Merges the training and the test sets to create one data set.
dataSet <- rbind(x_train,x_test) 

# 2. Extracts only the measurements on the mean and standard deviation for each measurement. 
# Create a vector of only mean and std, use the vector to subset.
MeanStdOnly <- grep("mean()|std()", features[, 2]) 
dataSet <- dataSet[,MeanStdOnly] 

# 4. Appropriately labels the data set with descriptive activity names.
# Create vector of "Clean" feature names by getting rid of "()" apply to the dataSet to rename labels.
CleanFeatureNames <- sapply(features[, 2], function(x) {gsub("[()]", "",x)}) (remove ())
names(dataSet) <- CleanFeatureNames[MeanStdOnly] (descriptive names)

# combine test and train of subject data and activity data, give descriptive lables
subject <- rbind(subject_train, subject_test)
names(subject) <- 'subject'
activity <- rbind(y_train, y_test)
names(activity) <- 'activity'

# combine subject, activity, and mean and std only data set to create final data set.
dataSet <- cbind(subject,activity, dataSet)(10299 rows, 81 cols)

# 3. Uses descriptive activity names to name the activities in the data set
# group the activity column of dataSet, re-name lable of levels with activity_levels, and apply it to dataSet.
act_group <- factor(dataSet$activity)
levels(act_group) <- activity_labels[,2]
dataSet$activity <- act_group (renaming)

# 5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject. 
Finaldata <- dataSet %>% group_by(subject, activity) %>% summarise_all(mean) 
write.table(Finaldata, "finaldata.txt", sep = ",") (calculate group means)

From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject
Finaldata (180 rows, 81 columns) is created by sumarizing TidyData taking the means of each variable for each activity and each subject, after groupped by subject and activity.
Export FinalData into finaldata.txt file.